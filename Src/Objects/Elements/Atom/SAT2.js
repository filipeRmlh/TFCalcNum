!function(t,o){"use strict";"function"==typeof define&&define.amd?define(o):"object"==typeof exports?module.exports=o():t.SAT=o()}(this,function(){"use strict";function t(t,o){this.x=t||0,this.y=o||0,this.name="Vector"}function o(o,e,r){r=void 0==r?{}:r,this.pos=o||new t,this.r=e||0,this.name="Circle",this.fillcolor=void 0==r.fillcolor?"none":r.fillcolor,this.bordercolor=void 0==r.bordercolor?"none":r.bordercolor}function e(o,e,r){r=void 0==r?{}:r,this.pos=o||new t,this.angle=0,this.offset=new t,this.name="Polygon",this.fillcolor=void 0==r.fillcolor?"none":r.fillcolor,this.bordercolor=void 0==r.bordercolor?"none":r.bordercolor,this.setPoints(e||[])}function r(o,e,r){this.pos=o||new t,this.w=e||0,this.h=r||0}function n(){this.a=null,this.b=null,this.overlapN=new t,this.overlapV=new t,this.clear()}function s(t,o,e){for(var r=Number.MAX_VALUE,n=-Number.MAX_VALUE,s=t.length,i=0;s>i;i++){var p=t[i].dot(o);r>p&&(r=p),p>n&&(n=p)}e[0]=r,e[1]=n}function i(t,o,e,r,n,i){var p=b.pop(),h=b.pop(),l=x.pop().copy(o).sub(t),c=l.dot(n);if(s(e,n,p),s(r,n,h),h[0]+=c,h[1]+=c,p[0]>h[1]||h[0]>p[1])return x.push(l),b.push(p),b.push(h),!0;if(i){var a=0;if(p[0]<h[0])if(i.aInB=!1,p[1]<h[1])a=p[1]-h[0],i.bInA=!1;else{var u=p[1]-h[0],y=h[1]-p[0];a=y>u?u:-y}else if(i.bInA=!1,p[1]>h[1])a=p[0]-h[1],i.aInB=!1;else{var u=p[1]-h[0],y=h[1]-p[0];a=y>u?u:-y}var f=Math.abs(a);f<i.overlap&&(i.overlap=f,i.overlapN.copy(n),0>a&&i.overlapN.reverse())}return x.push(l),b.push(p),b.push(h),!1}function p(t,o){var e=t.len2(),r=o.dot(t);return 0>r?P:r>e?m:A}function h(t,o){var e=x.pop().copy(t).sub(o.pos),r=o.r*o.r,n=e.len2();return x.push(e),r>=n}function l(t,o){w.pos.copy(t),g.clear();var e=y(w,o,g);return e&&(e=g.aInB),e}function c(t,o,e){var r=x.pop().copy(o.pos).sub(t.pos),n=t.r+o.r,s=n*n,i=r.len2();if(i>s)return x.push(r),!1;if(e){var p=Math.sqrt(i);e.a=t,e.b=o,e.overlap=n-p,e.overlapN.copy(r.normalize()),e.overlapV.copy(r).scale(e.overlap),e.aInB=t.r<=o.r&&p<=o.r-t.r,e.bInA=o.r<=t.r&&p<=t.r-o.r}return x.push(r),!0}function a(t,o,e){for(var r=x.pop().copy(o.pos).sub(t.pos),n=o.r,s=n*n,i=t.calcPoints,h=i.length,l=x.pop(),c=x.pop(),a=0;h>a;a++){var u=a===h-1?0:a+1,y=0===a?h-1:a-1,f=0,v=null;l.copy(t.edges[a]),c.copy(r).sub(i[a]),e&&c.len2()>s&&(e.aInB=!1);var d=p(l,c);if(d===P){l.copy(t.edges[y]);var b=x.pop().copy(r).sub(i[y]);if(d=p(l,b),d===m){var g=c.len();if(g>n)return x.push(r),x.push(l),x.push(c),x.push(b),!1;e&&(e.bInA=!1,v=c.normalize(),f=n-g)}x.push(b)}else if(d===m){if(l.copy(t.edges[u]),c.copy(r).sub(i[u]),d=p(l,c),d===P){var g=c.len();if(g>n)return x.push(r),x.push(l),x.push(c),!1;e&&(e.bInA=!1,v=c.normalize(),f=n-g)}}else{var w=l.perp().normalize(),g=c.dot(w),A=Math.abs(g);if(g>0&&A>n)return x.push(r),x.push(w),x.push(c),!1;e&&(v=w,f=n-g,(g>=0||2*n>f)&&(e.bInA=!1))}v&&e&&Math.abs(f)<Math.abs(e.overlap)&&(e.overlap=f,e.overlapN.copy(v))}return e&&(e.a=t,e.b=o,e.overlapV.copy(e.overlapN).scale(e.overlap)),x.push(r),x.push(l),x.push(c),!0}function u(t,o,e){var r=a(o,t,e);if(r&&e){var n=e.a,s=e.aInB;e.overlapN.reverse(),e.overlapV.reverse(),e.a=e.b,e.b=n,e.aInB=e.bInA,e.bInA=s}return r}function y(t,o,e){for(var r=t.calcPoints,n=r.length,s=o.calcPoints,p=s.length,h=0;n>h;h++)if(i(t.pos,o.pos,r,s,t.normals[h],e))return!1;for(var h=0;p>h;h++)if(i(t.pos,o.pos,r,s,o.normals[h],e))return!1;return e&&(e.a=t,e.b=o,e.overlapV.copy(e.overlapN).scale(e.overlap)),!0}var f={};f.Vector=t,f.V=t,t.prototype.copy=t.prototype.copy=function(t){return this.x=t.x,this.y=t.y,this},t.prototype.clone=t.prototype.clone=function(){return new t(this.x,this.y)},t.prototype.perp=t.prototype.perp=function(){var t=this.x;return this.x=this.y,this.y=-t,this},t.prototype.rotate=t.prototype.rotate=function(t){var o=this.x,e=this.y;return this.x=o*Math.cos(t)-e*Math.sin(t),this.y=o*Math.sin(t)+e*Math.cos(t),this},t.prototype.reverse=t.prototype.reverse=function(){return this.x=-this.x,this.y=-this.y,this},t.prototype.normalize=t.prototype.normalize=function(){var t=this.len();return t>0&&(this.x=this.x/t,this.y=this.y/t),this},t.prototype.add=t.prototype.add=function(t){return this.x+=t.x,this.y+=t.y,this},t.prototype.sub=t.prototype.sub=function(t){return this.x-=t.x,this.y-=t.y,this},t.prototype.scale=t.prototype.scale=function(t,o){return this.x*=t,this.y*=o||t,this},t.prototype.project=t.prototype.project=function(t){var o=this.dot(t)/t.len2();return this.x=o*t.x,this.y=o*t.y,this},t.prototype.projectN=t.prototype.projectN=function(t){var o=this.dot(t);return this.x=o*t.x,this.y=o*t.y,this},t.prototype.reflect=t.prototype.reflect=function(t){var o=this.x,e=this.y;return this.project(t).scale(2),this.x-=o,this.y-=e,this},t.prototype.reflectN=t.prototype.reflectN=function(t){var o=this.x,e=this.y;return this.projectN(t).scale(2),this.x-=o,this.y-=e,this},t.prototype.dot=t.prototype.dot=function(t){return this.x*t.x+this.y*t.y},t.prototype.len2=t.prototype.len2=function(){return this.dot(this)},t.prototype.len=t.prototype.len=function(){return Math.sqrt(this.len2())},t.prototype.getAngle=function(o){return o=void 0==o?new t:o,Math.atan((this.y-o.y)/(this.x-o.x))},t.prototype.moduleScale=function(t){var o=this.getAngle();return this.x+=t*Math.cos(o),this.y+=t*Math.sin(o),this},t.prototype.draw=function(t){var o={x:t.x+this.x,y:t.y+this.y};ctx.beginPath(),ctx.strokeStyle="#000000",ctx.moveTo(t.x,t.y),ctx.lineTo(o.x,o.y),ctx.stroke(),ctx.closePath()},f.Circle=o,o.prototype.getAABB=o.prototype.getAABB=function(){var o=this.r,e=this.pos.clone().sub(new t(o,o));return new r(e,2*o,2*o).toPolygon()},o.prototype.draw=function(){ctx.beginPath(),ctx.fillStyle=this.fillcolor,ctx.strokeStyle=this.bordercolor,ctx.arc(this.pos.x,this.pos.y,this.r,0,2*Math.PI),"none"!==this.fillcolor&&ctx.fill(),"none"!==this.bordercolor&&ctx.stroke(),ctx.closePath()},o.prototype.collision=function(t,o){return f["testCircle"+t.name](this,t,o)},f.Polygon=e,e.prototype.setPoints=e.prototype.setPoints=function(o){var e=!this.points||this.points.length!==o.length;if(e){var r,n=this.calcPoints=[],s=this.edges=[],i=this.normals=[];for(r=0;r<o.length;r++)n.push(new t),s.push(new t),i.push(new t)}return this.points=o,this._recalc(),this},e.prototype.setAngle=e.prototype.setAngle=function(t){return this.angle=t,this._recalc(),this},e.prototype.setOffset=e.prototype.setOffset=function(t){return this.offset=t,this._recalc(),this},e.prototype.rotate=e.prototype.rotate=function(t){for(var o=this.points,e=o.length,r=0;e>r;r++)o[r].rotate(t);return this._recalc(),this},e.prototype.translate=e.prototype.translate=function(t,o){for(var e=this.points,r=e.length,n=0;r>n;n++)e[n].x+=t,e[n].y+=o;return this._recalc(),this},e.prototype._recalc=function(){var t,o=this.calcPoints,e=this.edges,r=this.normals,n=this.points,s=this.offset,i=this.angle,p=n.length;for(t=0;p>t;t++){var h=o[t].copy(n[t]);h.x+=s.x,h.y+=s.y,0!==i&&h.rotate(i)}for(t=0;p>t;t++){var l=o[t],c=p-1>t?o[t+1]:o[0],a=e[t].copy(c).sub(l);r[t].copy(a).perp().normalize()}return this},e.prototype.getAABB=e.prototype.getAABB=function(){for(var o=this.calcPoints,e=o.length,n=o[0].x,s=o[0].y,i=o[0].x,p=o[0].y,h=1;e>h;h++){var l=o[h];l.x<n?n=l.x:l.x>i&&(i=l.x),l.y<s?s=l.y:l.y>p&&(p=l.y)}return new r(this.pos.clone().add(new t(n,s)),i-n,p-s).toPolygon()},e.prototype.collision=function(t,o){return f["testPolygon"+t.name](this,t,o)},f.Box=r,r.prototype.toPolygon=r.prototype.toPolygon=function(){var o=this.pos,r=this.w,n=this.h;return new e(new t(o.x,o.y),[new t,new t(r,0),new t(r,n),new t(0,n)])},f.Response=n,n.prototype.clear=n.prototype.clear=function(){return this.aInB=!0,this.bInA=!0,this.overlap=Number.MAX_VALUE,this};var v=function(o,e,r,n){this.name="Line",o=void 0==o?new t:o,e=void 0!=e?e:new t,r=r||0,n=void 0==n?{}:n,this.pos=new t((e.x+o.x)/2,(e.y+o.y)/2),this.angle=0,this.offset=new t,this.fillcolor=void 0==n.fillcolor?"none":n.fillcolor,this.bordercolor="none",this.createPoints(o,e,r)};v.prototype=e.prototype,v.prototype.createPoints=function(t,o,e){var r=o.clone().sub(t).perp().normalize().moduleScale(e/2),n=[t.clone().add(r),o.clone().add(r),o.clone().sub(r),t.clone().sub(r)];this.setPoints(n)},v.prototype.collision=function(t,o){return f["testLine"+t.name](this,t,o)},f.Line=v;for(var x=[],d=0;10>d;d++)x.push(new t);for(var b=[],d=0;5>d;d++)b.push([]);var g=new n,w=new r(new t,1e-6,1e-6).toPolygon();f.isSeparatingAxis=i;var P=-1,A=0,m=1;return f.pointInCircle=h,f.pointInPolygon=l,f.testCircleCircle=c,f.testPolygonCircle=a,f.testCirclePolygon=u,f.testPolygonPolygon=y,f.testCircleLine=u,f.testLineCircle=a,f.testLinePolygon=y,f.testPolygonLine=y,f.testLineLine=y,f});